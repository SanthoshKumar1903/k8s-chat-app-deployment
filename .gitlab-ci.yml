stages:
  - deploy

deploy_to_server:
  stage: deploy
  image: alpine:latest
  
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - when: manual

  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh-client )'
    - 'command -v curl >/dev/null || ( apk add --update curl )'

    - eval $(ssh-agent -s)

    - echo "$SSH_KEY" | tr -d '\r' | ssh-add -

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - |
      ssh ${SERVER_USER}@${SERVER_IP} "
        echo '--- Connected to server ---'

        if ! command -v docker &> /dev/null; then
          echo 'Docker not found. Installing...'
          sudo apt-get update -y
          sudo apt-get install -y ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \\\"deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \$(. /etc/os-release && echo \\\"\$VERSION_CODENAME\\\") stable\\\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo usermod -aG docker \${USER}
          echo 'Docker installed. Note: A system reboot or new login session might be needed for user group changes to take effect.'
        else
          echo 'Docker is already installed.'
        fi

        if ! command -v minikube &> /dev/null; then
          echo 'Minikube not found. Installing...'
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
          # Start minikube using the docker driver, requires user to be in the docker group.
          # This might fail on first run if the user group hasn't been re-evaluated.
          newgrp docker << END
          minikube start --driver=docker
          END
        else
          echo 'Minikube is already installed.'
          newgrp docker << END
          minikube status || minikube start --driver=docker
          END
        fi

        PROJ_DIR=\"full-stack-app\"
        
        # Check if the directory exists
        if [ ! -d \"\$PROJ_DIR\" ]; then
          echo '--- Cloning repository for the first time ---'
          git clone https://github.com/SanthoshKumar1903/k8s-chat-app-deployment \"\$PROJ_DIR\"
        else
          echo '--- Repository exists, pulling latest changes ---'
          cd \"\$PROJ_DIR\"
          git pull origin main
        fi
        
        cd \"\$PROJ_DIR\"
        
        echo '--- Applying Kubernetes manifests ---'
        minikube kubectl -- apply -f kubernetes/
        
        echo '--- Deployment finished ---'
      "
